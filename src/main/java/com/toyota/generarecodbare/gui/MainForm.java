package com.toyota.generarecodbare.gui;

import com.toyota.generarecodbare.codbare.Generare;
import com.toyota.generarecodbare.connection.ConnectDB;
import com.toyota.generarecodbare.print.PrintImage;
import com.toyota.generarecodbare.zpl.ZebraPrinting;
import net.proteanit.sql.DbUtils;

import java.io.FileInputStream;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.awt.*;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class MainForm extends javax.swing.JFrame {
    public static String text;
    public static String denumire;
    int viewRow;
    int modelRow;
    //    public static JComponent jLabel2;
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form MainForm
     */
    public MainForm() throws IOException, SQLException {
        initComponents();
        conn = ConnectDB.ConnectDb();
        UpdateTabel();
    }

//    JLabel lblSearch = new JLabel("Search");
//    lblSearch.setBounds(247,11,46,14);

//    BufferedImage myPicture = ImageIO.read(new File("coduri_bara.png"));
//    JLabel picLabel = new JLabel(new ImageIcon(myPicture));
    //jPanel1.add(picLabel);

    File file = new File(text + ".png");
    File workingDirectory = new File(System.getProperty("user.dir").toString() + "\\" + file);
    String adresaIcon = workingDirectory.toString();
//    String fname = "[GMRO011P].[dbo].[ITEM]";
//    File TabelPiese = new File(fname);
     private void UpdateTabel() {
        try {
//            String sql = "select Cod,Denumire,Stoc from TabelPiese";
            String sql = "select itemno,name,suplno from [GMRO011P].[dbo].[ITEM]";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
//            TabelPiese.setModel(DbUtils.resultSetToTableModel(rs));
            TabelPiese.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (Exception e) {
            }
        }
    }

    public void close() {
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtFieldSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelPiese = new javax.swing.JTable();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFieldSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFieldSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("Cauta");

        jButton1.setText("Genereaza");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    jButton1MouseClicked(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButton2.setText("Iesire");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Denumire");

        jButton3.setText("Tiparire");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    jButton3MouseClicked(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });

        TabelPiese.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TabelPiese.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelPieseMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TabelPiese);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jButton2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addGap(9, 9, 9))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Generare cod bare");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldSearchKeyPressed
        // TODO add your handling code here:
//        DefaultTableModel model = (DefaultTableModel)TabelPiese.getModel();
//        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
//        TabelPiese.setRowSorter(tr);
//        tr.setRowFilter(RowFilter.regexFilter(txtFieldSearch.getText().trim()));
    }//GEN-LAST:event_txtFieldSearchKeyPressed

    private void txtFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldSearchKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TabelPiese.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        TabelPiese.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtFieldSearch.getText().trim()));
    }//GEN-LAST:event_txtFieldSearchKeyReleased

    private void TabelPieseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelPieseMouseClicked
        // TODO add your handling code here:
        try {
//            int row = TabelPiese.getSelectedRow();
//            String Table_click = (TabelPiese.getModel().getValueAt(row, 0).toString());
//            String sql = "select * from TabelPiese where cod='" + Table_click + "' ";
//            pst = conn.prepareStatement(sql);
//            rs = pst.executeQuery();
//            TabelPiese.getSelectionModel().addListSelectionListener(
//                    new ListSelectionListener() {
//                        public void valueChanged(ListSelectionEvent event) {
//                            viewRow = TabelPiese.getSelectedRow();
//                            if (viewRow > 0) {
//                                modelRow = TabelPiese.convertRowIndexToModel(viewRow);
//                            }
//                        }
//                    });
//
//            if (rs.next()) {
//                text = rs.getString("cod");
//                System.out.println("la mouse click: " + text + " " + viewRow+ " " + row+ " " + modelRow);
//                txt_cod.setText(text);
//                String text2 = rs.getString("denumire");
//                txt_denumire.setText(text2);
//                String text3 = rs.getString("stoc");
//                txt_stoc.setText(text3);
//                txt_row.setText(String.valueOf(modelRow));
//            }
            final int[] viewRow = {TabelPiese.getSelectedRow()};
            if (viewRow[0] >= 0) {
                final int[] modelRow = {TabelPiese.convertRowIndexToModel(viewRow[0])};
                String Table_click = (TabelPiese.getModel().getValueAt(modelRow[0], 0).toString());

//                String sql = "select * from TabelPiese where cod='" + Table_click + "' ";
                String sql = "select * from [GMRO011P].[dbo].[ITEM] where itemno='" + Table_click + "' ";
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();

                TabelPiese.getSelectionModel().addListSelectionListener(
                        new ListSelectionListener() {
                            public void valueChanged(ListSelectionEvent event) {
                                viewRow[0] = TabelPiese.getSelectedRow();
                                if (viewRow[0] >= 0) {
                                    modelRow[0] = TabelPiese.convertRowIndexToModel(viewRow[0]);
                                }
                            }
                        }
                );

                if (rs.next()) {
                    text = rs.getString("itemno");
                    denumire = rs.getString("name");
                    System.out.println("la mouse click: " + text + " " + viewRow[0] + " " + modelRow[0]);
                    System.out.println("la mouse click: " + denumire);
//                    txt_cod.setText(text);
//                    String text2 = rs.getString("denumire");
//                    txt_denumire.setText(text2);
//                    String text3 = rs.getString("stoc");
//                    txt_stoc.setText(text3);
//                    txt_row.setText(String.valueOf(modelRow[0]));
                }
            }
            System.out.println("Before ZebraPrinting" + MainForm.text);
            ZebraPrinting.print(MainForm.text);
//           Generare.generate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }


    }//GEN-LAST:event_TabelPieseMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) throws IOException {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
 //       Generare.generate();
        ZebraPrinting.print(MainForm.text);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) throws Exception {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        PrintImage.print();
//        try {
//            FileInputStream fin = new FileInputStream(Generare.adresa1);
//            System.out.println(Generare.adresa1);
//            PrintImage.print(fin);
//        } catch (FileNotFoundException e) {
//            throw new RuntimeException(e);
//        } catch (Exception e) {
//            throw new RuntimeException(e);
//        }
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainForm().setVisible(true);
                } catch (IOException | SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelPiese;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtFieldSearch;
    // End of variables declaration//GEN-END:variables
}
